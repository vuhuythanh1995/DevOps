-- Khi ta cài docker sẽ mặc định có 3 card mạng là : 
	-bridge
	-host
	-none
-- Bridge :
	Docker sẽ tạo ra 1 switch ảo. Khi container được tạo ra, interface của container sẽ tự động gắn vào switch ảo này và kết nối với interface của host. Những container trong cùng mạng có thể ping và curl được với nhau.
-- Host :
	Container sẽ dùng mạng trực tiếp của máy Host.
-- None :
	Các container được thiết lập cấu hình network này sẽ không được cấu hình mạng.

Mapping và Export :
-- Mapping port : nhằm giúp thế giới bên ngoài giao tiếp được với container.
-- Export port : nhằm giúp các container có thể giap tiếp được với nhau.

Tài liệu Docker-Network.
https://docker-ghichep.readthedocs.io/en/latest/docker-network/#12-bridge
docker service create --name node-app -p 8000:3000 --replicas=4 --env MONGODB_URI=mongodb://mongodb:27017/demo --env PORT=3000 --network=myapp vhthanh/demo-service1:latest
	
	Có thể đặt địa chỉ container bằng --ip
$ docker network create --subnet 10.66.0.0/16 pubnet
42fb16ec412383db6289a3e39c3c0224f395d7f85bcb1859b279e7a564d4e135
$ docker run --net pubnet --ip 10.66.66.66 -d nginx
b2887adeb5578a01fd9c55c435cad56bbbe802350711d2743691f95743680b09

	Chúng ta có thể kết nối với ứng dụng đang chạy trong container. Trên thực tế kết nối là 2 chiều, có thể apt-get install từ bên trong container và lấy packages được tải xuống từ internet vì network interfaces call docker0;
Docker0 được tạo ra từ docker daemon để kết nối với Docker container.
	Trong container sẽ có địa chỉ IP random và nó được kết hợp với máy chủ IP 172.17.0.1 , điều này có nghĩa là chúng ta có thể kết nối với ứng dụng nằm trong container ngay cả khi không có port forwarding, vd : 172.17.0.4:8080 , khi expose -p 2222:8080 => 0.0.0.0:2222 hoặc localhost:2222 
	$ docker port <id> // check port được expose

